apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'antlr'

repositories {
    mavenCentral()
}

dependencies {
    antlr "org.antlr:antlr:3.5.2"

    // COMPILE
    compile "org.apache.ant:ant:1.9.7"
    compile "org.ow2.asm:asm:5.0.4"
    compile "org.ow2.asm:asm-commons:5.0.4"
    compile "org.ow2.asm:asm-util:5.0.4"

    compile "com.github.jnr:jnr-posix:3.0.31"
    compile "com.github.jnr:jnr-ffi:2.1.0"
    compile "com.github.jnr:jnr-constants:0.9.5"
    compile "com.github.jnr:jnr-netdb:1.1.6"
    compile "com.github.jnr:jffi:1.2.14"

    /*
      these stub jars are pre-built in https://github.com/jnr/jffi/tree/master/archive
      and rarely if ever change
     */
    compile fileTree(dir: 'extlibs', include: 'jffi-*.jar')    

    compile "org.bouncycastle:bcpkix-jdk15on:1.54"
    compile "org.bouncycastle:bcprov-jdk15on:1.54"
    
    compile "org.apache.commons:commons-compress:1.12"

    compile "com.google.guava:guava:20.0"

    compile "com.ibm.icu:icu4j:58.1"

    compile "com.carrotsearch:java-sizeof:0.0.5"

    compile "jline:jline:2.14.2"

    compile "mysql:mysql-connector-java:5.1.6"
    compile "org.postgresql:postgresql:9.2-1004-jdbc4"

    compile "javax.servlet:servlet-api:2.5"
    compile "xerces:xercesImpl:2.11.0"

    compile "io.netty:netty-buffer:4.1.6.Final"
    compile "io.netty:netty-codec:4.1.6.Final"
    compile "io.netty:netty-common:4.1.6.Final"
    compile "io.netty:netty-handler:4.1.6.Final"
    compile "io.netty:netty-resolver:4.1.6.Final"
    compile "io.netty:netty-transport:4.1.6.Final"

    // TEST
    testCompile 'junit:junit:4.12'
    testCompile "com.mockrunner:mockrunner:0.4.1"
}

allprojects {
    group = 'org.python'
}

subprojects {
    apply plugin: 'idea'

    buildDir = new File(rootProject.buildDir, path.replace(":", File.separator).substring(0))

    idea {
        module {
            excludeDirs += buildDir
        }
    }

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}


idea {
    project {
        jdkName = '1.7'
        languageLevel = '1.7'
    }
}

compileJava {
    dependsOn generateGrammarSource
}

sourceSets {
    main {
        java {
            srcDir 'src'
            exclude '**/handler/*DataHandler.java'  // FIXME Separate oracle/informix
       }
   }
}

task expose {
    doLast {
        ant.taskdef(name: 'expose',
                    classname: 'org.python.expose.generate.ExposeTask',
                    classpath: sourceSets.main.compileClasspath)
        ant.expose(srcdir: sourceSet.output.classesDir,
                destdir: sourceSet.output.classesDir,
                includesfile: 'CoreExposed.includes') {
            formatter(type: 'text', toConsole: 'true')
        }
    }
}
